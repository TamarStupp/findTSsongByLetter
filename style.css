html {
    font-size: calc(16px + 0.5vh);
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    text-align: center;
}


body {
    display: flex;
    flex-direction: column;
    height: calc(100vh - 16px);
    margin: 0;
    background-color: #EFD7F5;
    overflow-x: hidden;
}

button {
    background: none;
    border: none;
    outline: none;
    cursor: pointer;
    /* padding: 0; */
    font-size: inherit;
}

/* scroll bar */
@supports not selector(::-webkit-scrollbar) {
    .scrollStyle {
      scrollbar-color: #e5e5e5 darkgrey;
      scrollbar-width: 11px;
    }
  }
  
  .scrollStyle::-webkit-scrollbar {
    width: 10px;
  }
   
  .scrollStyle::-webkit-scrollbar-track {
    border-radius: 0.4rem;
    background-color: #e5e5e5;
  }
  
   
  .scrollStyle::-webkit-scrollbar-thumb {
      /* background-color: rgba(136, 134, 134, 0.658);
      border-radius: 0.4rem; */
      background-color: rgba(136, 134, 134, 0.658);
      border-radius: 0.4rem;
      border: 1px #efd7f5 solid;
      cursor: pointer;
  }
  
  .scrollStyle::-webkit-scrollbar-thumb:hover {
      background-color: #b27fc1; 
  }

.bg-wrapper {
    height: 100vh;
    width: 100vw;
    overflow: clip;
    position: absolute;
    z-index: -1;
}

.bg {
    background: url("./orange-wave.svg") bottom no-repeat, linear-gradient(180deg, hsl(30, 95%, 60%) 0%, hsl(30deg 95% 68.82%) 100%) no-repeat;
    background-size: 37rem 20rem, 37rem calc(102% - 20rem);
    position: absolute;
    top: 0;
    width: 100%;
    height: 16.8rem;
    transition: height 2s;
}

/* higher bg */
body:has(.ExistingLetters) .bg {
    height: 120%;
}

.title {
    font-family: 'Segoe UI Black';
    /* padding-top: 0.3rem; */
    padding-inline: 0.4rem;
    /* margin-top: 8px; */
    margin-bottom: 1.6em;
    font-size: 1.5rem;
    transition: margin 1.5s;
}

/* smaller margin */
.title:has(+.ExistingLetters) {
    margin-bottom: 0.4rem;
}

.flex {
    display: flex;
    flex-direction: column;
    align-items: center;
    flex-basis: 65vh;
    flex-grow: 1;
    justify-content: space-evenly;
    gap: 0.8rem;
    padding-inline: 1rem;
}

.MissingLetters {
    --generate-color: #FBB46D;
    --error-color: #AF0909;
}

.ExistingLetters {
    --generate-color: #F0D4EC;
    --error-color: #9E0000;
    padding-bottom: 2rem;
}

.explanation {
    text-align: left;
}

.input {
    border: 1px solid black;
    border-radius: 0.4rem;
    font-size: inherit;
    padding: 0.5rem 1rem;
}

.error::before {
    display: none;
    color: var(--error-color);
    font-size: 0.8em;
    text-align: left;
    padding-left: 0.5em;
    margin-top: 0.1rem;
}

/* Error messages. Used in before because I can't  */
.input:not(:placeholder-shown)+.error::before {
    content: "*Oops! It seems you entered something that is not a letter! "
}

.input:placeholder-shown+.error::before {
    content: "The input is empty :(" !important;
}

.input-wrapper:has(.input:invalid) .error::before {
    display: block;
}

label {
    display: block;
}

.output {
    flex-basis: 28vh;
    /* flex-grow: 2; */
    overflow: auto;
    width: 97%;
    text-align: left;
    margin: 0.1rem;
    align-self: flex-start;
    box-sizing: border-box;
}

.output li::marker {
    color: var(--generate-color)
}

footer {
    margin-top: 1rem;
    font-size: 0.7em;
    order: 1;
}

/* buttons styling */
.generate,
.goto {
    border: solid 1px black;
}

.generate {
    border-radius: 14px;
    padding: 0.5rem 1.5rem;
    background-color: var(--generate-color);
    font-family: "segoe UI Black";
    max-width: 48vw;
}

.goto {
    border-radius: 1rem;
    padding: 0.5rem 1.6rem;
    background-color: #D497E5;
}

.none {
    display: none;
}

@media screen and (min-width: 768px) {
    html {
        font-size: calc(10px + 1vh);
    }

    body {
        max-height: 100vh;
    }

    .bg {
        background-size: 100% 20rem, 100% calc(102% - 20rem);
    }

    .title {
        padding: 1.3rem 0.4rem;
        margin-top: 0;
        margin-bottom: 2.5rem;
        font-size: 2.4rem;
    }

    /* smaller margin */
    .title:has(+.ExistingLetters) {
        margin-bottom: 0rem;
    }

    /* higher bg */
    body:has(.ExistingLetters) .bg {
        height: 116%;
    }

    .output {
        overflow: visible;
        list-style-position: outside;
        column-count: 3;
        column-width: 16vw;
        column-gap: 2em;
        padding-block: 1rem;
        padding-left: 8rem;
        box-sizing: border-box;
    }

    footer {
        padding-block: 1rem;
        margin: 0;
    }
}